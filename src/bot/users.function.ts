import { Injectable } from '@nestjs/common';
import { Ctx, Hears, InjectBot, Message, On, Start, Update, Command } from 'nestjs-telegraf';
import { Telegraf, Markup } from 'telegraf';

import { Context } from './context.interface';
import { UsersService } from 'src/common/users.service';

@Injectable()
@Update()
export class UserFunctions {
   constructor(
      @InjectBot()
      private readonly bot: Telegraf<Context>,
      private readonly usersService: UsersService
   ) {}

   @On('new_chat_members')
   async userAddChannel(@Ctx() ctx: Context) {
      const groupId = ctx.message['chat'].id.toString()
      if(groupId !== process.env.GROUP_ID) {
         await ctx.reply('üçå')
         ctx.reply('–ö—É–¥–∞ —Ä—É—á–æ–Ω–∫–∏ —Ç—è–Ω–µ—à—å —Å–≤–æ–∏ –Ω–µ –º—ã—Ç—ã–µ')
         await ctx.leaveChat()
         return
      }
      if(ctx.message['new_chat_members'][0].is_bot) return
      const user = this.getUserData(ctx.message)
      const chatMember = ctx.message['new_chat_member']
      ctx.reply('–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é, –ø—É—Ç–Ω–∏–∫ üéâ\n–î–∞–±—ã –Ω–µ —Å–ª—É—à–∞—Ç—å –±–æ–ª—Ç–æ–≤–Ω—é, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–º—É—Ç–∞—Ç—å –≥—Ä—É–ø–ø—É, –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–±–æ—Ä–∞—Ö –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ @knightscrab_bot')

      this.usersService.addNew({
         tgId: user.tgId.toString(),
         tgName: chatMember.username,
         name: chatMember.first_name,
      })
   }

   @On('left_chat_member')
   async userLeftChannel(@Ctx() ctx: Context) {
      if(ctx.message['left_chat_participant'].is_bot) return
      ctx.reply('–ü–æ–∫–∞, –¥—Ä—É–≥...\n–ú—ã –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—å (–Ω–µ—Ç) üòÇ')
      const user = this.getUserData(ctx.message)
      this.usersService.deleteById(user.tgId)
   }

   getUserData(msg) {
      return {
         tgId: msg['new_chat_member']?.id || msg['left_chat_member']?.id,
         tgName: msg.from.username,
         name: msg.from.first_name,
      }
   }
}